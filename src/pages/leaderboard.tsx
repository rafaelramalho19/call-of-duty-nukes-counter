import Head from "next/head";
import { Inter } from "@next/font/google";
import styles from "@/styles/leaderboard.module.css";
import { useEffect, useState } from "react";
import NukeIcon from "@/images/nuke";
import InactiveNukeIcon from "@/images/inactive-nuke";

const inter = Inter({ subsets: ["latin"] });

const ActiveNuke = (props: any) => {
  return <NukeIcon className={styles.activeNuke} {...props} />;
};

const InactiveNuke = (props: any) => (
  <InactiveNukeIcon className={styles.nuke} {...props} />
);

const getLeader = async () => {
  try {
    return (await fetch("/api/cors?url=https://api.worldseriesofwarzone.com/api/standings?liveEventPath=https:%2F%2Fjson-stats.btg.blizzard.com%2Fwsow%2Fevent%2Fstage_1_open_eu")).json();
  } catch (error) {
    console.error(error);
    return { error };
  }
};

type Scoreboard = {
  rank: number;
  final_score: number;
  max_kills: number;
  total_kills: number;
  scores: number[];
  team_name: string;
}

export default function Nukes() {
  const [scoreboard, setScoreboard] = useState({} as Scoreboard);

  const getLeaderboard = async () => {
    const { error, standings } = await getLeader();
    if (error) return;

    setScoreboard(standings.find((x: Scoreboard) => x.team_name === 'L3SS#5044379, Raisingz#9918925, Snook#1551788'));
  };

  useEffect(() => {
    const interval = setInterval(() => {
      getLeaderboard();
    }, 10000);

    getLeaderboard();

    return () => clearInterval(interval);
  }, []);

  return (
    <>
      <Head>
        <title>Nukes</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div>Placement: <strong>{scoreboard.rank}</strong></div>
        <div>Final Score: <strong>{scoreboard.final_score}</strong></div>
        <div>Max Kills: <strong>{scoreboard.max_kills}</strong></div>
        <div>Total Kills: <strong>{scoreboard.total_kills}</strong></div>
        <div>Scores: <strong className={styles.score}>{scoreboard?.scores?.join(' | ')}</strong></div>
      </main>
    </>
  );
}
